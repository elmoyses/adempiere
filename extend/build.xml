<?xml version="1.0" encoding="utf-8"?>


<!--
==============================================================================
Ant file to build the ADempiere "extend" subproject
==============================================================================
-->
<project name="extend"
         default="build"
         basedir=".">

  <import file="../utils_dev/properties.xml"/>

  <property name="src.dir"   value="src"/>
  <property name="build.dir" value="build"/>
  <property name="dist.dir"  value="../lib"/>

  <property name="jar" value="${dist.dir}/Extend.jar"/>

  <path id="project.classpath">
    <pathelement path="../lib/Base.jar"/>
    <pathelement path="../tools/lib/junit.jar"/>
    <pathelement path="../tools/lib/testing/SuperCSV-with_src-1.52.jar"/>
  </path>

  <pathconvert refid="project.classpath"
               property="jar.classpath"
               pathsep=" ">
    <flattenmapper/>
  </pathconvert>


  <!--
  ==============================================================================
  Sets the timestamp and checks if the files need to be compiled at all
  ==============================================================================
  -->
  <target name="init">

    <echo>======================================================================</echo>
    <echo>Building ADempiere subproject "extend"</echo>
    <echo>======================================================================</echo>

    <tstamp/>

    <mkdir dir="${build.dir}"/>
    <mkdir dir="${dist.dir}"/>

    <uptodate property="jar.uptodate"
              targetfile="${jar}">
      <srcfiles dir="${src.dir}"
                includes="**/*.java"/>
    </uptodate>

  </target>


  <!--
  ==============================================================================
  Compiles the .java files into .class files
  ==============================================================================
  -->
  <target name="compile"
          depends="init">

    <javac srcdir="${src.dir}"
           destdir="${build.dir}"
           target="${compile.version}"
           debug="${compile.debug}"
           optimize="${compile.optimize}"
           deprecation="${compile.deprecation}"
           includeAntRuntime="false"
           classpathref="project.classpath"/>

    <copy todir="${build.dir}"
          verbose="true">
      <fileset dir="${src.dir}">
        <include name="**/images/*"/>
        <include name="**/*.gif"/>
        <include name="**/*.jpg"/>
        <include name="**/*.wav"/>
        <include name="**/*.htm"/>
        <include name="**/*.html"/>
        <include name="**/*.properties"/>
        <exclude name="**/package.html"/>
      </fileset>
    </copy>

  </target>


  <!--
  ==============================================================================
  Builds the Java Archive containing the compiled classes
  ==============================================================================
  -->
  <target name="build"
          depends="compile"
          unless="jar.uptodate">

    <jar destfile="${jar}"
         compress="${compile.compress}"
         basedir="${build.dir}">
      <manifest>
        <attribute name="Specification-Title"    value="extend"/>
        <attribute name="Specification-Version"  value="${env.ADEMPIERE_VERSION}"/>
        <attribute name="Specification-Vendor"   value="${env.ADEMPIERE_VENDOR}"/>
        <attribute name="Implementation-Title"   value="Extend.jar"/>
        <attribute name="Implementation-Version" value="${env.ADEMPIERE_VERSION_FILE} ${DSTAMP}-${TSTAMP}"/>
        <attribute name="Implementation-Vendor"  value="${env.ADEMPIERE_VENDOR}"/>
        <attribute name="Implementation-URL"     value="${env.ADEMPIERE_URL}"/>
        <attribute name="Class-Path"             value="${jar.classpath}"/>
      </manifest>
    </jar>

  </target>


  <!--
  ==============================================================================
  Deletes all files created by this build script and creates them again
  ==============================================================================
  -->
  <target name="rebuild"
          depends="clean,
                   build"/>


  <!--
  ==============================================================================
  Deletes all files created by this build script.
  ==============================================================================
  -->
  <target name="clean">

    <delete dir="${build.dir}"/>
    <delete file="${jar}"/>

  </target>

</project>
